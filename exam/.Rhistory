a_sd <- getBatchSd(a_wo_outlier)
# a_carbon_balance <- getCarbonBalance(a_wo_outlier, a_cd, cumulate="co2")
# saveCarbonBalance(a_carbon_balance, paste(output_dir, "a_carbon_balance.csv", sep = ""))
# plot_fermdata(a_wo_outlier, cumulate="co2")
# plot_fermdata(a_wo_outlier, cumulate="co2", type = "png",
#               filename = paste(output_dir, "a.png", sep = ""), width = 1200,
#               height = 800)
#
b <- paste(input_dir, "B/B", 1:8, ".txt", sep="")
b_d <- readBatchDatasets(b)
b_cd <- readCompoundData(paste(input_dir, "B/Compounds.txt", sep = ""))
b_wo_outlier <- removeOutliers(b_d)
b_means <- getBatchMeans(b_wo_outlier)
b_sd <- getBatchSd(b_wo_outlier)
# b_carbon_balance <- getCarbonBalance(b_wo_outlier, b_cd, cumulate="co2")
# saveCarbonBalance(b_carbon_balance, paste(output_dir, "b_carbon_balance.csv", sep = ""))
# plot_fermdata(b_wo_outlier, cumulate="co2")
# plot_fermdata(b_wo_outlier, cumulate="co2", type = "jpeg",
#               filename = paste(output_dir, "b.jpg", sep = ""), width = 1600,
#               height = 1000, res = 120)
cumulate= "co2"
mytestlist <- list()
for (i in colnames(a_means)){
if (i == cumulate){
x_balance <- cumsum(((a_means[,i]/a_cd[i,"molweight"]) * a_cd[i,"carbons"]))}
else {
x_balance <- as.numeric(((a_means[,i]/a_cd[i,"molweight"]) * a_cd[i,"carbons"]))
}
mytestlist[[i]]<- append(mytestlist[[i]], as.numeric(x_balance))
}
?append
str(mytestlist)
View(mytestlist)
str(mytestlist)
mysecondtestlist <- unlist(mytestlist)
str(mysecondtestlist)
#mysecondtestlist <- unlist(mytestlist)
#str(mysecondtestlist)
mymatrix <- matrix(ncol=9, nrow=9, mytestlist)
#mysecondtestlist <- unlist(mytestlist)
#str(mysecondtestlist)
mymatrix <- matrix(ncol=9, nrow=9, mytestlist)
View(mymatrix)
cumulate= "co2"
mytestlist <- list()
for (i in colnames(a_means)){
if (i == cumulate){
x_balance <- cumsum(((a_means[,i]/a_cd[i,"molweight"]) * a_cd[i,"carbons"]))}
else {
x_balance <- as.numeric(((a_means[,i]/a_cd[i,"molweight"]) * a_cd[i,"carbons"]))
}
mytestlist[[i]]<- append(mytestlist, as.numeric(x_balance))
}
?append
str(mytestlist)
cumulate= "co2"
mytestlist <- list()
for (i in colnames(a_means)){
if (i == cumulate){
x_balance <- cumsum(((a_means[,i]/a_cd[i,"molweight"]) * a_cd[i,"carbons"]))}
else {
x_balance <- as.numeric(((a_means[,i]/a_cd[i,"molweight"]) * a_cd[i,"carbons"]))
}
append(mytestlist, as.numeric(x_balance))
}
View(mytestlist)
?append
str(mytestlist)
cumulate= "co2"
mytestlist <- list()
for (i in colnames(a_means)){
if (i == cumulate){
x_balance <- cumsum(((a_means[,i]/a_cd[i,"molweight"]) * a_cd[i,"carbons"]))}
else {
x_balance <- as.numeric(((a_means[,i]/a_cd[i,"molweight"]) * a_cd[i,"carbons"]))
}
mytestlist <- append(mytestlist, as.numeric(x_balance))
}
?append
str(mytestlist)
#mysecondtestlist <- unlist(mytestlist)
#str(mysecondtestlist)
mymatrix <- matrix(ncol=ncol(a_means), nrow=nrow(a_means), mytestlist)
View(mymatrix)
str(mytestlist)
#mysecondtestlist <- unlist(mytestlist)
#str(mysecondtestlist)
mymatrix <- matrix(ncol=ncol(a_means), nrow=nrow(a_means), mytestlist)
mydf <- as.data.frame(t(mymatrix), stringsAsFactors = F)
View(mydf)
rownames(mydf) <- colnames(a_means)
mydf <- mydf[,-1]
mydf <- mydf[-1,]
colnames(mydf) <- a_means[,"hour"]
View(mydf)
c
cumulate= "co2"
mytestlist <- list()
for (i in colnames(a_means)){
if (i == cumulate){
x_balance <- cumsum(((a_means[,i]/a_cd[i,"molweight"]) * a_cd[i,"carbons"]))}
else {
x_balance <- as.numeric(((a_means[,i]/a_cd[i,"molweight"]) * a_cd[i,"carbons"]))
}
mytestlist <- append(mytestlist, as.numeric(x_balance))
}
?append
str(mytestlist)
#mysecondtestlist <- unlist(mytestlist)
#str(mysecondtestlist)
mymatrix <- matrix(ncol=ncol(a_means), nrow=nrow(a_means), mytestlist)
mydf <- as.data.frame(t(mymatrix), stringsAsFactors = F)
rownames(mydf) <- colnames(a_means)
mydf <- mydf[-1,]
colnames(mydf) <- a_means[,"hour"]
tmydf<- t(mydf)
View(tmydf)
mydf <- as.data.frame(t(mymatrix), stringsAsFactors = F)
View(mydf)
rownames(mydf) <- colnames(a_means)
View(mydf)
mydf <- mydf[-1,]
colnames(mydf) <- a_means[,"hour"]
sum(mydf$`0.4`)
sum(mydf$"0.4")
sum(mydf[,1])
# tmydf<- t(mydf)
str(mydf)
sum(mydf$`19.08`)
?sum
sum(mydf$`19.08`, na.rm=T)
View(mydf)
View(mydf)
# tmydf<- t(mydf)
str(mydf)
# tmydf<- t(mydf)
str(mydf$`0.4`)
sum(as.vector(mydf$`19.08`), na.rm=T)
apply(mydf,2,sum)
apply(mydf,2,sum)
colSums(mydf)
r
str(mytestlist)
#mysecondtestlist <- unlist(mytestlist)
#str(mysecondtestlist)
mymatrix <- matrix(ncol=ncol(a_means), nrow=nrow(a_means), mytestlist)
#mysecondtestlist <- unlist(mytestlist)
#str(mysecondtestlist)
mymatrix <- matrix(ncol=ncol(a_means), nrow=nrow(a_means), mytestlist)
#mysecondtestlist <- unlist(mytestlist)
#str(mysecondtestlist)
mymatrix <- matrix(ncol=8, nrow=9, mytestlist)
#mysecondtestlist <- unlist(mytestlist)
#str(mysecondtestlist)
mymatrix <- matrix(ncol=8, nrow=9, mytestlist)
#mysecondtestlist <- unlist(mytestlist)
#str(mysecondtestlist)
mymatrix <- matrix(ncol=8, nrow=9, byrow= T, mytestlist)
#mysecondtestlist <- unlist(mytestlist)
#str(mysecondtestlist)
mymatrix <- matrix(ncol=ncol(a_means), nrow=nrow(a_means))
View(mymatrix)
#mysecondtestlist <- unlist(mytestlist)
#str(mysecondtestlist)
mymatrix <- matrix(mytestlist, ncol=ncol(a_means), nrow=nrow(a_means))
mydf <- as.data.frame(t(mymatrix), stringsAsFactors = F)
rownames(mydf) <- colnames(a_means)
mydf <- mydf[-1,]
colnames(mydf) <- a_means[,"hour"]
# tmydf<- t(mydf)
str(mydf$`0.4`)
colSums(mydf)
sum(as.vector(mydf$`19.08`), na.rm=T)
?sum
View(mydf)
myma <- as.matrix(mydf)
View(myma)
myma <- as.array(mydf)
dim(mydf)
str(mydf)
mydf$`0.4`[1] + mydf$`0.4`[2]
mydf$`0.4`
sum(unlist(mydf$`0.4`))
mydf <- append("carbonsum")
mydf <- append("carbonsum", NA)
cumulate= "co2"
mytestlist <- list()
for (i in colnames(a_means)){
if (i == cumulate){
x_balance <- cumsum(((a_means[,i]/a_cd[i,"molweight"]) * a_cd[i,"carbons"]))}
else {
x_balance <- as.numeric(((a_means[,i]/a_cd[i,"molweight"]) * a_cd[i,"carbons"]))
}
mytestlist <- append(mytestlist, as.numeric(x_balance))
}
?append
str(mytestlist)
#mysecondtestlist <- unlist(mytestlist)
#str(mysecondtestlist)
mymatrix <- matrix(mytestlist, ncol=ncol(a_means), nrow=nrow(a_means))
mydf <- as.data.frame(t(mymatrix), stringsAsFactors = F)
rownames(mydf) <- colnames(a_means)
mydf <- mydf[-1,]
colnames(mydf) <- a_means[,"hour"]
mydf[nrow(mydf) + 1,] = sum(unlist(mydf$`0.4`))
View(mydf)
mydf[nrow(mydf) + 1,] = sum(unlist(colSums( mydf)))
mydf[nrow(mydf) + 1,] = (colSums(mydf))
mydf[nrow(mydf) + 1,] = (colSums(unlist(mydf)))
f
for (i in colnames(mydf)){
mydf[nrow(mydf) + 1,] = sum(unlist(mydf$i))
}
View(mydf)
cumulate= "co2"
mytestlist <- list()
for (i in colnames(a_means)){
if (i == cumulate){
x_balance <- cumsum(((a_means[,i]/a_cd[i,"molweight"]) * a_cd[i,"carbons"]))}
else {
x_balance <- as.numeric(((a_means[,i]/a_cd[i,"molweight"]) * a_cd[i,"carbons"]))
}
mytestlist <- append(mytestlist, as.numeric(x_balance))
}
?append
str(mytestlist)
#mysecondtestlist <- unlist(mytestlist)
#str(mysecondtestlist)
mymatrix <- matrix(mytestlist, ncol=ncol(a_means), nrow=nrow(a_means))
mydf <- as.data.frame(t(mymatrix), stringsAsFactors = F)
rownames(mydf) <- colnames(a_means)
mydf <- mydf[-1,]
colnames(mydf) <- a_means[,"hour"]
View(mydf)
# for (i in colnames(mydf)){
# mydf[nrow(mydf) + 1,] = sum(unlist(mydf$i))
# }
for (i in colnames(mydf)){
sum(unlist(mydf$i))
}
# for (i in colnames(mydf)){
# mydf[nrow(mydf) + 1,] = sum(unlist(mydf$i))
# }
for (i in colnames(mydf)){
summi =sum(unlist(mydf$i))
print(summi)
}
print(i)
# for (i in colnames(mydf)){
# mydf[nrow(mydf) + 1,] = sum(unlist(mydf$i))
# }
for (i in colnames(mydf)){
print(i)
summi =sum(unlist(mydf$i))
print(summi)
}
sum(unlist(mydf$"0.4"))
# for (i in colnames(mydf)){
# mydf[nrow(mydf) + 1,] = sum(unlist(mydf$i))
# }
summi <- list()
for (i in colnames(mydf)){
summi[i] = sum(unlist(mydf$i))
print(summi)
}
# for (i in colnames(mydf)){
# mydf[nrow(mydf) + 1,] = sum(unlist(mydf$i))
# }
summi <- list()
for (i in colnames(mydf)){
summi[i] = sum(unlist(mydf$i))
return(summi)
}
View(summi)
summi <- list()
for (i in colnames(mydf)){
summi[i] <- sum(unlist(mydf$i))
return(summi)
}
View(summi)
sum(unlist(mydf$"0.4"))
summi[1] <- sum(unlist(mydf$"0.4"))
summi[2] <- sum(unlist(mydf[,2]))
View(summi)
View(summi)
View(summi)
summi <- list()
for (i in 1:length(colnames(mydf))){
summi[i] <- sum(unlist(mydf[,i]))
return(summi)
}
summi <- list()
for (i in 1:9){
summi[i] <- sum(unlist(mydf[,i]))
return(summi)
}
summi <- list()
for (i in c(1:9)){
summi[i] <- sum(unlist(mydf[,i]))
return(summi)
}
summi <- list()
for (i in c(1,2,3,4,5,6,7,8,9)){
summi[i] <- sum(unlist(mydf[,i]))
return(summi)
}
View(summi)
summi <- list()
for (i in 1:9)){
summi[i] <- sum(unlist(mydf[,i]))
}
summi <- list()
for (i in 1:9) {
summi[i] <- sum(unlist(mydf[,i]))
}
summi <- list()
for (i in length(colnames(mydf))) {
summi[i] <- sum(unlist(mydf[,i]))
}
View(summi)
View(summi)
summi <- list()
for (i in colnames(mydf)) {
summi[i] <- sum(unlist(mydf[,i]))
}
View(summi)
str(summi)
mydf[nrow(mydf)+1,] <- summi
View(mydf)
rownames(mydf)[mydf] <- "carbonsum"
rownames(mydf)[[mydf]] <- "carbonsum"
rownames(mydf)[nrow(mydf)] <- "carbonsum"
# carbonbalance anfügen:
mydf["carbonsum",1]
# carbonbalance anfügen:
str(mydf["carbonsum",1])
# carbonbalance anfügen:
strunlist((mydf["carbonsum",1]))
# carbonbalance anfügen:
str(unlist((mydf["carbonsum",1])))
refval <- unlist(mydf["carbonsum",1])
# carbonbalance anfügen:
str(unlist(mydf["carbonsum",1]))
refval <- unlist(mydf["carbonsum",1])
balval <- list()
for (i in colnames(mydf)) {
balval[i] <- (unlist(mydf["carbonsum",i]))/refval
}
mydf[nrow(mydf)+1,] <- balval
rownames(mydf)[nrow(mydf)] <- "carbonbalance"
getCarbonBalance <- function(x, y, cumulate="co2"){
x_means <- getBatchMeans(x)
mylist <- list()  #TODO: length !
for (i in colnames(x_means)){
if (i == cumulate){
x_balance <- cumsum(((x_means[,i]/y[i,"molweight"]) * y[i,"carbons"]))}
else {
x_balance <- as.numeric(((x_means[,i]/y[i,"molweight"]) * y[i,"carbons"]))
}
mylist <- append(mylist, as.numeric(x_balance))
}
mymatrix <- matrix(mylist, ncol=ncol(x_means), nrow=nrow(x_means))
mydf <- as.data.frame(t(mymatrix), stringsAsFactors = F)
rownames(mydf) <- colnames(x_means)
mydf <- mydf[-1,]
colnames(mydf) <- x_means[,"hour"]
# carbonsum Zeile anfügen
summi <- list()
for (i in colnames(mydf)) {
summi[i] <- sum(unlist(mydf[,i]))
}
mydf[nrow(mydf)+1,] <- summi
rownames(mydf)[nrow(mydf)] <- "carbonsum"
# carbonbalance anfügen:
str(unlist(mydf["carbonsum",1]))
refval <- unlist(mydf["carbonsum",1])
balval <- list()
for (i in colnames(mydf)) {
balval[i] <- (unlist(mydf["carbonsum",i]))/refval
}
mydf[nrow(mydf)+1,] <- balval
rownames(mydf)[nrow(mydf)] <- "carbonbalance"
return(mydf)
}
isesdas <- getCarbonBalance(a_wo_outlier,a_cd,cumulate="co2")
View(isesdas)
# library(BatchFermentationAnalyser)
setwd("C:/Users/user/Desktop/VM-Zeug/sem2/R/exam")
# FUNCTIONS:
readBatchDatasets <- function(x) {
mylist <- vector(mode = "list", length = length(x))
e = 1
for (i in x) {
mylist[[e]] <- read.table(i,
header = TRUE,
colClasses = "numeric")
e = e + 1
}
return(mylist)
}
readCompoundData <- function(x) {
mycompounds <- read.table(x)
return(mycompounds)
}
removeOutliers <- function(x, na.rm = TRUE) {
for (i in 1:length(x)) {
for (e in 1:ncol(x[[1]])) {
q <- quantile(t(x[[i]][, e]), probs = c(0.25, 0.75), na.rm = na.rm)
d <- 1.5 * IQR(x[[i]][, e], na.rm = na.rm)
x[[i]][, e][x[[i]][, e] < (q[1] - d)] <- NA
x[[i]][, e][x[[i]][, e] > (q[2] + d)] <- NA
}
}
return(x)
}
##########################################
getTestMeans <- function(x, na.rm = T) {
for (i in 1:length(x)) {
x[[i]] <- apply(x[[i]], 2, mean, na.rm = na.rm)
}
return(x)
}
getBatchMeans <- function(x, na.rm =T){
test <- getTestMeans(x)
test2 <- t(data.frame(test))
rownames(test2) <- NULL
return(test2)
}
getBatchMeans(a_d)
##########################################
getTestSd <- function(x, na.rm = T) {
for (i in 1:length(x)) {
x[[i]] <- apply(x[[i]], 2, sd, na.rm = na.rm)
}
return(x)
}
getBatchSd <- function(x, na.rm =T){
test <- getTestSd(x)
test2 <- t(data.frame(test))
rownames(test2) <- NULL
return(test2)
}
#######################################################
getCarbonBalance <- function(x, y, cumulate="co2"){
x_means <- getBatchMeans(x)
mylist <- list()  #TODO: length !
for (i in colnames(x_means)){
if (i == cumulate){
x_balance <- cumsum(((x_means[,i]/y[i,"molweight"]) * y[i,"carbons"]))}
else {
x_balance <- as.numeric(((x_means[,i]/y[i,"molweight"]) * y[i,"carbons"]))
}
mylist <- append(mylist, as.numeric(x_balance))
}
mymatrix <- matrix(mylist, ncol=ncol(x_means), nrow=nrow(x_means))
mydf <- as.data.frame(t(mymatrix), stringsAsFactors = F)
rownames(mydf) <- colnames(x_means)
mydf <- mydf[-1,]
colnames(mydf) <- x_means[,"hour"]
# carbonsum Zeile anfügen
summi <- list()
for (i in colnames(mydf)) {
summi[i] <- sum(unlist(mydf[,i]))
}
mydf[nrow(mydf)+1,] <- summi
rownames(mydf)[nrow(mydf)] <- "carbonsum"
# carbonbalance anfügen:
str(unlist(mydf["carbonsum",1]))
refval <- unlist(mydf["carbonsum",1])
balval <- list()
for (i in colnames(mydf)) {
balval[i] <- (unlist(mydf["carbonsum",i]))/refval
}
mydf[nrow(mydf)+1,] <- balval
rownames(mydf)[nrow(mydf)] <- "carbonbalance"
return(mydf)
}
isesdas <- getCarbonBalance(a_wo_outlier,a_cd,cumulate="co2")
##############################################
basis_dir <- getwd()
input_dir <- paste(basis_dir, "/input/", sep = "")
output_dir <- paste(basis_dir, "/output/", sep = "")
a <- paste(input_dir, "A/A", 1:8, ".txt", sep="")
a_d <- readBatchDatasets(a)
a_cd <- readCompoundData(paste(input_dir, "A/Compounds.txt", sep = ""))
a_wo_outlier <- removeOutliers(a_d)
a_means <- getBatchMeans(a_wo_outlier)
a_sd <- getBatchSd(a_wo_outlier)
a_carbon_balance <- getCarbonBalance(a_wo_outlier, a_cd, cumulate="co2")
# saveCarbonBalance(a_carbon_balance, paste(output_dir, "a_carbon_balance.csv", sep = ""))
# plot_fermdata(a_wo_outlier, cumulate="co2")
# plot_fermdata(a_wo_outlier, cumulate="co2", type = "png",
#               filename = paste(output_dir, "a.png", sep = ""), width = 1200,
#               height = 800)
#
b <- paste(input_dir, "B/B", 1:8, ".txt", sep="")
b_d <- readBatchDatasets(b)
b_cd <- readCompoundData(paste(input_dir, "B/Compounds.txt", sep = ""))
b_wo_outlier <- removeOutliers(b_d)
b_means <- getBatchMeans(b_wo_outlier)
b_sd <- getBatchSd(b_wo_outlier)
b_carbon_balance <- getCarbonBalance(b_wo_outlier, b_cd, cumulate="co2")
# saveCarbonBalance(b_carbon_balance, paste(output_dir, "b_carbon_balance.csv", sep = ""))
# plot_fermdata(b_wo_outlier, cumulate="co2")
# plot_fermdata(b_wo_outlier, cumulate="co2", type = "jpeg",
#               filename = paste(output_dir, "b.jpg", sep = ""), width = 1600,
#               height = 1000, res = 120)
View(a_carbon_balance)
View(b_carbon_balance)
View(a_carbon_balance)
View(b_carbon_balance)
View(a_carbon_balance)
